<?xml version="1.0" encoding="UTF-8"?>
<!-- Spring Boot 기반 챗봇 서버 빌드 설정.
     - Java 17 LTS 타겟, Web/WebFlux/Validation/Jackson 의존성을 포함.
     - Maven Surefire 프로필로 e2e 태그 테스트를 분리한다. -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.6</version>
		<relativePath/>
	</parent>

	<groupId>com.example</groupId>
	<artifactId>embed-chatbot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>embed-chatbot</name>
	<description>Demo project for Spring Boot</description>

        <properties>
                <!-- 컴파일 대상 Java 버전 (로컬/CI 모두 17 사용) -->
                <java.version>17</java.version>
                <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
                <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
                <maven.surefire.plugin.version>3.2.5</maven.surefire.plugin.version>
        </properties>

        <dependencies>
                <!-- Web / Validation: MVC와 Bean Validation으로 REST API 기본 구성 -->
                <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-web</artifactId>
                </dependency>
                <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-validation</artifactId>
                </dependency>

                <!-- WebClient (Reactor 기반) : OpenAI HTTP 호출을 위한 비동기 클라이언트 -->
                <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-webflux</artifactId>
                </dependency>

                <!-- Jackson (대부분 spring-boot-starter-web에 포함되지만 명시 유지) -->
                <dependency>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>jackson-databind</artifactId>
                </dependency>

                <!-- Devtools (로컬 개발 편의) -->
                <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

                <!-- Lombok (선택): DTO/로그 보일러플레이트 제거 용도 -->
                <dependency>
                        <groupId>org.projectlombok</groupId>
                        <artifactId>lombok</artifactId>
                        <optional>true</optional>
                </dependency>

                <!-- Test: JUnit/Jackson/MockMvc 등 테스트 인프라 -->
                <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-test</artifactId>
                        <scope>test</scope>
                </dependency>
        </dependencies>

        <build>
                <plugins>
                        <!-- 컴파일러(어노테이션 프로세서: lombok) -->
                        <plugin>
                                <groupId>org.apache.maven.plugins</groupId>
                                <artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

                        <!-- Spring Boot 실행/패키징 -->
                        <plugin>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

                        <!-- ✅ Surefire: JUnit @Tag 필터링용 (기본 그룹 비워두어 단위 테스트만 실행) -->
                        <plugin>
                                <groupId>org.apache.maven.plugins</groupId>
                                <artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<!-- 기본 CI에선 단위테스트만: 태그 필터 비움 -->
					<groups></groups>
					<useModulePath>false</useModulePath>
				</configuration>
			</plugin>
		</plugins>
	</build>

        <!-- ✅ E2E 전용 프로필: -P e2e 일 때만 @Tag("e2e") 실행 -->
        <profiles>
                <profile>
			<id>e2e</id>
			<properties>
				<groups>e2e</groups>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven.surefire.plugin.version}</version>
						<configuration>
							<groups>${groups}</groups>
							<useModulePath>false</useModulePath>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
